package connection

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteConnectionParams creates a new DeleteConnectionParams object
// with the default values initialized.
func NewDeleteConnectionParams() *DeleteConnectionParams {
	var ()
	return &DeleteConnectionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteConnectionParamsWithTimeout creates a new DeleteConnectionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteConnectionParamsWithTimeout(timeout time.Duration) *DeleteConnectionParams {
	var ()
	return &DeleteConnectionParams{

		timeout: timeout,
	}
}

/*DeleteConnectionParams contains all the parameters to send to the API endpoint
for the delete connection operation typically these are written to a http.Request
*/
type DeleteConnectionParams struct {

	/*ConnectionName
	  Name of connection

	*/
	ConnectionName string

	timeout time.Duration
}

// WithConnectionName adds the connectionName to the delete connection params
func (o *DeleteConnectionParams) WithConnectionName(ConnectionName string) *DeleteConnectionParams {
	o.ConnectionName = ConnectionName
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteConnectionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param connection_name
	if err := r.SetPathParam("connection_name", o.ConnectionName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
