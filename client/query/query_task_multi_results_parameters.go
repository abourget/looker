package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewQueryTaskMultiResultsParams creates a new QueryTaskMultiResultsParams object
// with the default values initialized.
func NewQueryTaskMultiResultsParams() *QueryTaskMultiResultsParams {
	var ()
	return &QueryTaskMultiResultsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewQueryTaskMultiResultsParamsWithTimeout creates a new QueryTaskMultiResultsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewQueryTaskMultiResultsParamsWithTimeout(timeout time.Duration) *QueryTaskMultiResultsParams {
	var ()
	return &QueryTaskMultiResultsParams{

		timeout: timeout,
	}
}

/*QueryTaskMultiResultsParams contains all the parameters to send to the API endpoint
for the query task multi results operation typically these are written to a http.Request
*/
type QueryTaskMultiResultsParams struct {

	/*QueryTaskIds
	  List of Query Task IDs

	*/
	QueryTaskIds []string

	timeout time.Duration
}

// WithQueryTaskIds adds the queryTaskIds to the query task multi results params
func (o *QueryTaskMultiResultsParams) WithQueryTaskIds(QueryTaskIds []string) *QueryTaskMultiResultsParams {
	o.QueryTaskIds = QueryTaskIds
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *QueryTaskMultiResultsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	valuesQueryTaskIds := o.QueryTaskIds

	joinedQueryTaskIds := swag.JoinByFormat(valuesQueryTaskIds, "")
	// query array param query_task_ids[]
	if err := r.SetQueryParam("query_task_ids[]", joinedQueryTaskIds...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
