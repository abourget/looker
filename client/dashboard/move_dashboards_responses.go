package dashboard

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// MoveDashboardsReader is a Reader for the MoveDashboards structure.
type MoveDashboardsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *MoveDashboardsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewMoveDashboardsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewMoveDashboardsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewMoveDashboardsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewMoveDashboardsOK creates a MoveDashboardsOK with default headers values
func NewMoveDashboardsOK() *MoveDashboardsOK {
	return &MoveDashboardsOK{}
}

/*MoveDashboardsOK handles this case with default header values.

Empty string response.
*/
type MoveDashboardsOK struct {
	Payload string
}

func (o *MoveDashboardsOK) Error() string {
	return fmt.Sprintf("[PATCH /dashboards/move][%d] moveDashboardsOK  %+v", 200, o.Payload)
}

func (o *MoveDashboardsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMoveDashboardsBadRequest creates a MoveDashboardsBadRequest with default headers values
func NewMoveDashboardsBadRequest() *MoveDashboardsBadRequest {
	return &MoveDashboardsBadRequest{}
}

/*MoveDashboardsBadRequest handles this case with default header values.

Bad Request
*/
type MoveDashboardsBadRequest struct {
	Payload
}

func (o *MoveDashboardsBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /dashboards/move][%d] moveDashboardsBadRequest  %+v", 400, o.Payload)
}

func (o *MoveDashboardsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMoveDashboardsNotFound creates a MoveDashboardsNotFound with default headers values
func NewMoveDashboardsNotFound() *MoveDashboardsNotFound {
	return &MoveDashboardsNotFound{}
}

/*MoveDashboardsNotFound handles this case with default header values.

Not Found
*/
type MoveDashboardsNotFound struct {
	Payload
}

func (o *MoveDashboardsNotFound) Error() string {
	return fmt.Sprintf("[PATCH /dashboards/move][%d] moveDashboardsNotFound  %+v", 404, o.Payload)
}

func (o *MoveDashboardsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
