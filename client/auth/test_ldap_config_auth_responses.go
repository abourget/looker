package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// TestLdapConfigAuthReader is a Reader for the TestLdapConfigAuth structure.
type TestLdapConfigAuthReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *TestLdapConfigAuthReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewTestLdapConfigAuthOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewTestLdapConfigAuthBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewTestLdapConfigAuthNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTestLdapConfigAuthOK creates a TestLdapConfigAuthOK with default headers values
func NewTestLdapConfigAuthOK() *TestLdapConfigAuthOK {
	return &TestLdapConfigAuthOK{}
}

/*TestLdapConfigAuthOK handles this case with default header values.

Result info.
*/
type TestLdapConfigAuthOK struct {
	Payload
}

func (o *TestLdapConfigAuthOK) Error() string {
	return fmt.Sprintf("[PUT /ldap_config/test_auth][%d] testLdapConfigAuthOK  %+v", 200, o.Payload)
}

func (o *TestLdapConfigAuthOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestLdapConfigAuthBadRequest creates a TestLdapConfigAuthBadRequest with default headers values
func NewTestLdapConfigAuthBadRequest() *TestLdapConfigAuthBadRequest {
	return &TestLdapConfigAuthBadRequest{}
}

/*TestLdapConfigAuthBadRequest handles this case with default header values.

Bad Request
*/
type TestLdapConfigAuthBadRequest struct {
	Payload
}

func (o *TestLdapConfigAuthBadRequest) Error() string {
	return fmt.Sprintf("[PUT /ldap_config/test_auth][%d] testLdapConfigAuthBadRequest  %+v", 400, o.Payload)
}

func (o *TestLdapConfigAuthBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestLdapConfigAuthNotFound creates a TestLdapConfigAuthNotFound with default headers values
func NewTestLdapConfigAuthNotFound() *TestLdapConfigAuthNotFound {
	return &TestLdapConfigAuthNotFound{}
}

/*TestLdapConfigAuthNotFound handles this case with default header values.

Not Found
*/
type TestLdapConfigAuthNotFound struct {
	Payload
}

func (o *TestLdapConfigAuthNotFound) Error() string {
	return fmt.Sprintf("[PUT /ldap_config/test_auth][%d] testLdapConfigAuthNotFound  %+v", 404, o.Payload)
}

func (o *TestLdapConfigAuthNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
