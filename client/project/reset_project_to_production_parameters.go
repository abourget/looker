package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewResetProjectToProductionParams creates a new ResetProjectToProductionParams object
// with the default values initialized.
func NewResetProjectToProductionParams() *ResetProjectToProductionParams {
	var ()
	return &ResetProjectToProductionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewResetProjectToProductionParamsWithTimeout creates a new ResetProjectToProductionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewResetProjectToProductionParamsWithTimeout(timeout time.Duration) *ResetProjectToProductionParams {
	var ()
	return &ResetProjectToProductionParams{

		timeout: timeout,
	}
}

/*ResetProjectToProductionParams contains all the parameters to send to the API endpoint
for the reset project to production operation typically these are written to a http.Request
*/
type ResetProjectToProductionParams struct {

	/*ProjectID
	  Id of project

	*/
	ProjectID string

	timeout time.Duration
}

// WithProjectID adds the projectId to the reset project to production params
func (o *ResetProjectToProductionParams) WithProjectID(ProjectID string) *ResetProjectToProductionParams {
	o.ProjectID = ProjectID
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *ResetProjectToProductionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param project_id
	if err := r.SetPathParam("project_id", o.ProjectID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
