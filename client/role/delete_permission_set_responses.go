package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeletePermissionSetReader is a Reader for the DeletePermissionSet structure.
type DeletePermissionSetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *DeletePermissionSetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeletePermissionSetNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeletePermissionSetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeletePermissionSetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeletePermissionSetNoContent creates a DeletePermissionSetNoContent with default headers values
func NewDeletePermissionSetNoContent() *DeletePermissionSetNoContent {
	return &DeletePermissionSetNoContent{}
}

/*DeletePermissionSetNoContent handles this case with default header values.

Permission set succssfully deleted.
*/
type DeletePermissionSetNoContent struct {
	Payload string
}

func (o *DeletePermissionSetNoContent) Error() string {
	return fmt.Sprintf("[DELETE /permission_sets/{permission_set_id}][%d] deletePermissionSetNoContent  %+v", 204, o.Payload)
}

func (o *DeletePermissionSetNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePermissionSetBadRequest creates a DeletePermissionSetBadRequest with default headers values
func NewDeletePermissionSetBadRequest() *DeletePermissionSetBadRequest {
	return &DeletePermissionSetBadRequest{}
}

/*DeletePermissionSetBadRequest handles this case with default header values.

Bad Request
*/
type DeletePermissionSetBadRequest struct {
	Payload
}

func (o *DeletePermissionSetBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /permission_sets/{permission_set_id}][%d] deletePermissionSetBadRequest  %+v", 400, o.Payload)
}

func (o *DeletePermissionSetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePermissionSetNotFound creates a DeletePermissionSetNotFound with default headers values
func NewDeletePermissionSetNotFound() *DeletePermissionSetNotFound {
	return &DeletePermissionSetNotFound{}
}

/*DeletePermissionSetNotFound handles this case with default header values.

Not Found
*/
type DeletePermissionSetNotFound struct {
	Payload
}

func (o *DeletePermissionSetNotFound) Error() string {
	return fmt.Sprintf("[DELETE /permission_sets/{permission_set_id}][%d] deletePermissionSetNotFound  %+v", 404, o.Payload)
}

func (o *DeletePermissionSetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
