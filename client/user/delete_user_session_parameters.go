package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteUserSessionParams creates a new DeleteUserSessionParams object
// with the default values initialized.
func NewDeleteUserSessionParams() *DeleteUserSessionParams {
	var ()
	return &DeleteUserSessionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteUserSessionParamsWithTimeout creates a new DeleteUserSessionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteUserSessionParamsWithTimeout(timeout time.Duration) *DeleteUserSessionParams {
	var ()
	return &DeleteUserSessionParams{

		timeout: timeout,
	}
}

/*DeleteUserSessionParams contains all the parameters to send to the API endpoint
for the delete user session operation typically these are written to a http.Request
*/
type DeleteUserSessionParams struct {

	/*SessionID
	  id of Web login session

	*/
	SessionID int64
	/*UserID
	  id of user

	*/
	UserID int64

	timeout time.Duration
}

// WithSessionID adds the sessionId to the delete user session params
func (o *DeleteUserSessionParams) WithSessionID(SessionID int64) *DeleteUserSessionParams {
	o.SessionID = SessionID
	return o
}

// WithUserID adds the userId to the delete user session params
func (o *DeleteUserSessionParams) WithUserID(UserID int64) *DeleteUserSessionParams {
	o.UserID = UserID
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteUserSessionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param session_id
	if err := r.SetPathParam("session_id", swag.FormatInt64(o.SessionID)); err != nil {
		return err
	}

	// path param user_id
	if err := r.SetPathParam("user_id", swag.FormatInt64(o.UserID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
