package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
)

/*DBConnection d b connection

swagger:model DBConnection
*/
type DBConnection struct {

	/* (Write-only) Base64 encoded Certificate body for server authentication (when appropriate for dialect).
	 */
	Certificate string `json:"certificate,omitempty"`

	/* Creation date for this connection

	Read Only: true
	*/
	CreatedAt string `json:"created_at,omitempty"`

	/* Database name
	 */
	Database string `json:"database,omitempty"`

	/* Time zone of database
	 */
	DbTimezone string `json:"db_timezone,omitempty"`

	/* (Read-only) SQL Dialect details

	Read Only: true
	*/
	Dialect `json:"dialect,omitempty"`

	/* (Read/Write) SQL Dialect name
	 */
	DialectName string `json:"dialect_name,omitempty"`

	/* Is this an example connection

	Read Only: true
	*/
	Example *bool `json:"example,omitempty"`

	/* Host name/address of server
	 */
	Host string `json:"host,omitempty"`

	/* Additional params to add to JDBC connection string
	 */
	JdbcAdditionalParams string `json:"jdbc_additional_params,omitempty"`

	/* Maximum number of concurrent connection to use
	 */
	MaxConnections int64 `json:"max_connections,omitempty"`

	/* Name of the connection. Also used as the unique identifier
	 */
	Name string `json:"name,omitempty"`

	/* (Write-only) Password for server authentication
	 */
	Password string `json:"password,omitempty"`

	/* Pool Timeout
	 */
	PoolTimeout int64 `json:"pool_timeout,omitempty"`

	/* Port number on server
	 */
	Port string `json:"port,omitempty"`

	/* Timezone to use in queries
	 */
	QueryTimezone string `json:"query_timezone,omitempty"`

	/* Scheme name
	 */
	Schema string `json:"schema,omitempty"`

	/* SQL Runner snippets for this connection

	Read Only: true
	*/
	Snippets string `json:"snippets,omitempty"`

	/* Use SSL/TLS when connecting to server
	 */
	Ssl bool `json:"ssl,omitempty"`

	/* Name of temporary database (if used)
	 */
	TmpDbName string `json:"tmp_db_name,omitempty"`

	/* Id of user who last modified this connection configuration

	Read Only: true
	*/
	UserID string `json:"user_id,omitempty"`

	/* Username for server authentication
	 */
	Username string `json:"username,omitempty"`

	/* Verify the SSL
	 */
	VerifySsl bool `json:"verify_ssl,omitempty"`
}

// Validate validates this d b connection
func (m *DBConnection) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
