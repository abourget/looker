package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
)

/*LegacyFeature legacy feature

swagger:model LegacyFeature
*/
type LegacyFeature struct {

	/* Description

	Read Only: true
	*/
	Description string `json:"description,omitempty"`

	/* Looker version where this feature became a legacy feature

	Read Only: true
	*/
	DisallowedAsOfVersion string `json:"disallowed_as_of_version,omitempty"`

	/* URL for documentation about this feature

	Read Only: true
	*/
	DocumentationURL string `json:"documentation_url,omitempty"`

	/* Whether this feature is currently enabled

	Read Only: true
	*/
	Enabled *bool `json:"enabled,omitempty"`

	/* Whether this feature has been enabled by a user
	 */
	EnabledLocally bool `json:"enabled_locally,omitempty"`

	/* Future Looker version where this feature will be removed

	Read Only: true
	*/
	EndOfLifeVersion string `json:"end_of_life_version,omitempty"`

	/* Unique Id

	Read Only: true
	*/
	ID int64 `json:"id,omitempty"`

	/* Name

	Read Only: true
	*/
	Name string `json:"name,omitempty"`

	/* Link to get this item

	Read Only: true
	*/
	URL strfmt.URI `json:"url,omitempty"`
}

// Validate validates this legacy feature
func (m *LegacyFeature) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
