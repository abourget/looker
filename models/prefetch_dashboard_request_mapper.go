package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
  strfmt "github.com/go-openapi/strfmt"

  "github.com/go-openapi/errors"
  "github.com/go-openapi/runtime"
  "github.com/go-openapi/validate"
  
  
)



/*PrefetchDashboardRequestMapper prefetch dashboard request mapper

swagger:model PrefetchDashboardRequestMapper
*/
type PrefetchDashboardRequestMapper struct {
  
  
  /* Access filters to apply when running queries for prefetch.

Read Only: true
 */
AccessFilters [] `json:"access_filters,omitempty"`

  
  /* Number of seconds it took to compute results for prefetch.

Read Only: true
 */
ComputationTime float32 `json:"computation_time,omitempty"`

  
  /* Time when prefetch was created.

Read Only: true
 */
CreatedAt strfmt.DateTime `json:"created_at,omitempty"`

  
  /* Dashboard filters to apply when running queries for prefetch.

Read Only: true
 */
DashboardFilters [] `json:"dashboard_filters,omitempty"`

  
  /* Number of times prefetch has been accessed.

Read Only: true
 */
HitCount int64 `json:"hit_count,omitempty"`

  
  /* Time when prefetch was last accessed.

Read Only: true
 */
TouchedAt strfmt.DateTime `json:"touched_at,omitempty"`

  
  /* Number of seconds prefetch will live for.

Read Only: true
 */
TTL int64 `json:"ttl,omitempty"`

  
  
  
}


// Validate validates this prefetch dashboard request mapper
func (m *PrefetchDashboardRequestMapper) Validate(formats strfmt.Registry) error {
  var res []error
  
  

  
  
  if err := m.validateAccessFilters(formats); err != nil {
    // prop
    res = append(res, err)
  }
  
  
  
  
  
  
  
  if err := m.validateDashboardFilters(formats); err != nil {
    // prop
    res = append(res, err)
  }
  
  
  
  
  
  
  
  
  
  

  if len(res) > 0 {
    return errors.CompositeValidationError(res...)
  }
  return nil
}





func (m *PrefetchDashboardRequestMapper) validateAccessFilters(formats strfmt.Registry) error {
  
  if swag.IsZero(m.AccessFilters) { // not required
    return nil
  }
  
  











  return nil
}










func (m *PrefetchDashboardRequestMapper) validateDashboardFilters(formats strfmt.Registry) error {
  
  if swag.IsZero(m.DashboardFilters) { // not required
    return nil
  }
  
  











  return nil
}















