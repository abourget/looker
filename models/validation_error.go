package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*ValidationError validation error

swagger:model ValidationError
*/
type ValidationError struct {

	/* Documentation link

	Required: true
	Read Only: true
	*/
	DocumentationURL strfmt.URI `json:"documentation_url"`

	/* errors

	Read Only: true
	*/
	Errors string `json:"errors,omitempty"`

	/* message

	Required: true
	Read Only: true
	*/
	Message string `json:"message"`
}

// Validate validates this validation error
func (m *ValidationError) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDocumentationURL(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ValidationError) validateDocumentationURL(formats strfmt.Registry) error {

	if err := validate.Required("documentation_url", "body", strfmt.URI(m.DocumentationURL)); err != nil {
		return err
	}

	return nil
}

func (m *ValidationError) validateMessage(formats strfmt.Registry) error {

	if err := validate.RequiredString("message", "body", string(m.Message)); err != nil {
		return err
	}

	return nil
}
